name: "Test"

on:
  pull_request:
  push:
    branches:
      - master
    tags:
      - "v*"

jobs:
    tarball:
      runs-on: ubuntu-22.04
      name: Tarball
      steps:
        - name: Clone wake
          uses: actions/checkout@v3
          with:
            fetch-depth: 0

        - name: Install Deps
          run: sudo apt-get update && sudo apt-get install -y build-essential fuse libfuse-dev libsqlite3-dev libgmp-dev libncurses5-dev pkg-config git g++ gcc libre2-dev python3-sphinx clang-format-12

        - name: Build Tarball
          run: make tarball

        - name: Generate Docs
          run: mkdir www && ./bin/wake --no-workspace --html > www/index.html

        - name: wake to rst
          run: PATH=$(pwd)/bin:$PATH PYTHONPATH=$(pwd)/scripts python3 scripts/wake2rst.py

        - name: Upload tarball
          uses: actions/upload-artifact@v3
          with:
            name: tarball
            path: wake_*.tar.xz

        - name: Upload Dockerfiles
          uses: actions/upload-artifact@v3
          with:
            name: dockerfiles
            path: .github/workflows/dockerfiles/
            retention-days: 1

        - name: Upload debian files
          uses: actions/upload-artifact@v3
          with:
            name: debian
            path: debian
            retention-days: 1

        - name: Upload test artifacts
          uses: actions/upload-artifact@v3
          with:
            name: tests
            path: tests
            retention-days: 1

        - name: Upload index.html
          uses: actions/upload-artifact@v3
          with:
            name: index.html
            path: www/index.html
            retention-days: 1

        - name: Upload html
          uses: actions/upload-artifact@v3
          with:
            name: html
            path: scripts/sphinx/build/html
            retention-days: 1

    docker_builds:
      runs-on: ubuntu-22.04
      needs: tarball
      name: Build ${{ matrix.target }}
      strategy:
        matrix:
          include:
            - target: alpine
              dockerfile: alpine
              extra_docker_build_args: ''
              extra_docker_run_args: ''
              build_cmd: make -C wake-* static
              test_cmd: tar xvJf wake-*/wake-static_* && cd tests && ../wake-*/bin/wake -v runTests
              install_src_glob: build/wake-*/wake-static_*

      steps:
        - name: Create target directories
          run: mkdir dockerfiles && mkdir -p build/tests && mkdir build/debian && chmod ugo+rwx build

        - name: Download Tarball
          uses: actions/download-artifact@v3
          with:
            name: tarball
            path: build

        - name: Download Debian Artifacts
          uses: actions/download-artifact@v3
          with:
            name: debian
            path: build/debian

        - name: Download Test Artifacts
          uses: actions/download-artifact@v3
          with:
            name: tests
            path: build/tests

        - name: Download Dockerfiles
          uses: actions/download-artifact@v3
          with:
            name: dockerfiles
            path: dockerfiles

        - name: Create orig file
          run: x=(build/wake_*.tar.xz); y=${x%.tar.xz}; cp "$x" "build/${y##*/}.orig.tar.xz"

        - name: Uncompress tarball
          run: tar xvJf build/wake_*.orig.tar.xz -C build

        - name: Set tests as executable
          run: chmod -R +x build/tests

        - name: Merge debian artifacts into tarball artifacts
          run: cp -a build/debian build/wake-*

        - name: Build docker image
          run: docker build -f dockerfiles/${{ matrix.dockerfile }} ${{ matrix.extra_docker_build_args }} -t wake-${{ matrix.dockerfile }} .

        - name: Build
          run: docker run --rm --mount type=bind,source=$PWD/build,target=/build --device /dev/fuse --cap-add SYS_ADMIN --security-opt apparmor:unconfined ${{ matrix.extra_docker_run_args }} wake-${{ matrix.dockerfile }} /bin/sh -c '${{ matrix.build_cmd }}'

        - name: Test
          run: docker run --rm --mount type=bind,source=$PWD/build,target=/build --device /dev/fuse --cap-add SYS_ADMIN --security-opt apparmor:unconfined wake-${{ matrix.dockerfile }} /bin/sh -c '${{ matrix.test_cmd }}'

        - name: Install
          run: install -D -t release/${{ matrix.target }} ${{ matrix.install_src_glob }}

        - name: Upload
          uses: actions/upload-artifact@v3
          with:
            name: release_${{ matrix.target }}
            path: release/${{ matrix.target }}
