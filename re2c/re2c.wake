# Copyright 2019 SiFive, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You should have received a copy of LICENSE.Apache2 along with
# this software. If not, you may obtain a copy at
#
#    https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Require re2c >= 1.0 for flag support
def re2cOk Unit =
  def ver =
    makePlan (which "re2c", "--version", Nil) Nil
    | setPlanStdout logNever
    | setPlanStderr logNever
    | setPlanEcho Verbose
    | runJob
    | getJobStdout
    | getWhenFail ""
    | extract `re2c ([0-9.]+)\n`
    | map (tokenize `\.` _)
    | flatten
  match ver
    x, y, _ = (int x | getOrElse 0) >= 1
    _       = False

def re2cReal file =
  def cpp = replace `\.re$` ".cpp" file.getPathName
  def cmdline = which "re2c", "-8", "-b", "--tags", "--no-generation-date", file.getPathName, "-o", cpp, Nil
  def result = job cmdline (file, Nil) | getJobOutput
  def compress = which "gzip", "-nk9", result.getPathName, Nil
  def _ = job compress (result, Nil)
  result

def re2cFake file =
  def cpp = replace `\.re$` ".cpp" file.getPathName
  def zip = source "{cpp}.gz"
  def fake = source "{here}/fake-re2c"
  def cmd = fake.getPathName, zip.getPathName, cpp, Nil
  job cmd (fake, zip, Nil) | getJobOutput

global def re2c file =
  if re2cOk Unit then re2cReal file else re2cFake file
