version: 2.1
jobs:
  tarball:
    docker:
      - image: circleci/buildpack-deps:stretch
    steps:
      - checkout
      - run: sudo apt-get update && sudo apt-get install -y build-essential libfuse-dev libsqlite3-dev libgmp-dev libncurses5-dev pkg-config git g++ gcc libre2-dev python3-sphinx
      - run: USE_FUSE_WAKE=0 make tarball && mkdir www && ./bin/wake --html > www/index.html
      - run: PATH=$(pwd)/bin:$PATH PYTHONPATH=$(pwd)/scripts python3 scripts/wake2rst.py
      - persist_to_workspace:
          root: .
          paths:
            - wake_*.tar.xz
            - wake.spec
            - debian
            - www
            - scripts/sphinx/build/html

  debian_wheezy:
    docker:
      - image: debian:wheezy
    steps:
      - run: |
          printf 'deb http://archive.debian.org/debian wheezy main\ndeb http://archive.debian.org/debian-security/ wheezy/updates main\n' > /etc/apt/sources.list
      - run: apt-get update -o Acquire::Check-Valid-Until=false && apt-get install -y build-essential devscripts git libfuse-dev libgmp-dev libncurses5-dev libsqlite3-dev pkg-config wget
      - run: |
          wget -q http://www.terpstra.ca/debian/pool/main/r/re2/libre2-1_20140304+dfsg-2_amd64.deb && dpkg -i libre2-1_20140304+dfsg-2_amd64.deb
          wget -q http://www.terpstra.ca/debian/pool/main/r/re2/libre2-dev_20140304+dfsg-2_amd64.deb && dpkg -i libre2-dev_20140304+dfsg-2_amd64.deb
      - attach_workspace:
          at: /tmp/workspace
      - run: |
          x=(/tmp/workspace/wake_*.tar.xz); y=${x%.tar.xz}; cp "$x" "${y##*/}.orig.tar.xz"
          tar xJf wake_*.orig.tar.xz
          cd wake-*
          cp -a /tmp/workspace/debian .
          debuild -us -uc
          cd ..
          mkdir -p release/debian_wheezy
          mv *.deb *.gz *.xz *.changes *.dsc release/debian_wheezy
      - persist_to_workspace:
          root: .
          paths:
            - release/debian_wheezy

  debian_testing:
    docker:
      - image: debian:testing
    steps:
      - run: apt-get update && apt-get install -y build-essential devscripts git libfuse-dev libgmp-dev libncurses5-dev libre2-dev libsqlite3-dev pkg-config
      - attach_workspace:
          at: /tmp/workspace
      - run: |
          x=(/tmp/workspace/wake_*.tar.xz); y=${x%.tar.xz}; cp "$x" "${y##*/}.orig.tar.xz"
          tar xJf wake_*.orig.tar.xz
          cd wake-*
          cp -a /tmp/workspace/debian .
          debuild -us -uc
          cd ..
          mkdir -p release/debian_testing
          mv *.deb *.xz *.changes *.dsc release/debian_testing
      - persist_to_workspace:
          root: .
          paths:
            - release/debian_testing

  centos_6_6:
    docker:
      - image: centos:6.6
    steps:
      - run: yum -y update && yum clean all
      - run: yum --setopt=skip_missing_names_on_install=False install -y rpm-build rpm-devel rpmlint make python bash coreutils diffutils patch rpmdevtools
      - run: yum --setopt=skip_missing_names_on_install=False install -y epel-release centos-release-scl
      - run: yum --setopt=skip_missing_names_on_install=False install -y tar xz git which make devtoolset-6-gcc devtoolset-6-gcc-c++ fuse-devel gmp-devel ncurses-devel sqlite-devel re2-devel gcc gcc-c++
      - attach_workspace:
          at: /tmp/workspace
      - run: |
          rpmdev-setuptree
          cp /tmp/workspace/wake_*.tar.xz /root/rpmbuild/SOURCES
          cp /tmp/workspace/wake.spec .
          /usr/bin/scl enable devtoolset-6 'rpmbuild -ba wake.spec'
          mkdir -p release/centos_6_6
          cp /root/rpmbuild/RPMS/x86_64/*.rpm /root/rpmbuild/SRPMS/*.rpm release/centos_6_6
      - persist_to_workspace:
          root: .
          paths:
            - release/centos_6_6

  centos_7_6:
    docker:
      - image: centos:7.6.1810
    steps:
      - run: yum -y update && yum clean all
      - run: yum --setopt=skip_missing_names_on_install=False install -y rpm-build rpm-devel rpmlint make python bash coreutils diffutils patch rpmdevtools
      - run: yum --setopt=skip_missing_names_on_install=False install -y epel-release
      - run: yum --setopt=skip_missing_names_on_install=False install -y tar xz git which make gcc gcc-c++ fuse-devel gmp-devel ncurses-devel sqlite-devel re2-devel
      - run: rpmdev-setuptree
      - attach_workspace:
          at: /tmp/workspace
      - run: |
          rpmdev-setuptree
          cp /tmp/workspace/wake_*.tar.xz /root/rpmbuild/SOURCES
          cp /tmp/workspace/wake.spec .
          rpmbuild -ba wake.spec
          mkdir -p release/centos_7_6
          cp /root/rpmbuild/RPMS/x86_64/*.rpm /root/rpmbuild/SRPMS/*.rpm release/centos_7_6
      - persist_to_workspace:
          root: .
          paths:
            - release/centos_7_6

  ubuntu_16_04:
    docker:
      - image: ubuntu:16.04
    steps:
      - run: apt-get update && apt-get install -y build-essential debhelper devscripts git libfuse-dev libgmp-dev libncurses5-dev libre2-dev libsqlite3-dev pkg-config
      - attach_workspace:
          at: /tmp/workspace
      - run: |
          x=(/tmp/workspace/wake_*.tar.xz); y=${x%.tar.xz}; cp "$x" "${y##*/}.orig.tar.xz"
          tar xJf wake_*.orig.tar.xz
          cd wake-*
          cp -a /tmp/workspace/debian .
          debuild -us -uc
          cd ..
          mkdir -p release/ubuntu_16_04
          mv *.deb *.xz *.changes *.dsc release/ubuntu_16_04
      - persist_to_workspace:
          root: .
          paths:
            - release/ubuntu_16_04

  ubuntu_18_04:
    docker:
      - image: ubuntu:18.04
    steps:
      - run: apt-get update && apt-get install -y build-essential debhelper devscripts git libfuse-dev libgmp-dev libncurses5-dev libre2-dev libsqlite3-dev pkg-config
      - attach_workspace:
          at: /tmp/workspace
      - run: |
          x=(/tmp/workspace/wake_*.tar.xz); y=${x%.tar.xz}; cp "$x" "${y##*/}.orig.tar.xz"
          tar xJf wake_*.orig.tar.xz
          cd wake-*
          cp -a /tmp/workspace/debian .
          debuild -us -uc
          cd ..
          mkdir -p release/ubuntu_18_04
          mv *.deb *.xz *.changes *.dsc release/ubuntu_18_04
      - persist_to_workspace:
          root: .
          paths:
            - release/ubuntu_18_04

  release:
    docker:
      - image: circleci/buildpack-deps:stretch
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run: |
          cp /tmp/workspace/wake_*.tar.xz /tmp/workspace/release
      - store_artifacts:
          path: /tmp/workspace/release

  docs_deploy:
    docker:
      - image: circleci/buildpack-deps:stretch
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - add_ssh_keys:
          fingerprints:
            - "9d:87:e9:4d:46:91:1b:12:bb:a6:ef:16:f1:da:52:49"
      - run: |
          echo "github.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==" > ~/.ssh/known_hosts
          cd /tmp/workspace/scripts/sphinx/build/html
          cp /tmp/workspace/www/index.html .
          touch .nojekyll
          git init
          git add .
          git -c user.email="ci-wake-build@sifive.com" -c user.name="ci-wake-build" commit -m "[skip ci] Deploy to GitHub Pages"
          git push --force "git@github.com:sifive/wake.git" master:gh-pages

workflows:
  version: 2
  build:
    jobs:
      - tarball
      - debian_testing:
          requires:
            - tarball
      - debian_wheezy:
          requires:
            - tarball
      - centos_6_6:
          requires:
            - tarball
      - centos_7_6:
          requires:
            - tarball
      - ubuntu_16_04:
          requires:
            - tarball
      - ubuntu_18_04:
          requires:
            - tarball
      - release:
          requires:
            - debian_testing # Newest everything
            - debian_wheezy  # Oldest supported compiler
            - centos_6_6     # Oldest supported package versions
            - centos_7_6
            - ubuntu_16_04   # LTS
            - ubuntu_18_04   # LTS
      - docs_deploy:
          requires:
            - release
          filters:
            branches:
              only: master
