# Copyright 2019 SiFive, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You should have received a copy of LICENSE.Apache2 along with
# this software. If not, you may obtain a copy at
#
#    https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# useful build variants
global def default = Pair "native-cpp11-release" "native-c99-release"
global def debug   = Pair "native-cpp11-debug" "native-c99-debug"

def targets = buildWake, buildFuse, buildShim, buildPreload, buildPrelib, Nil
def allOut variant = map (_ variant) targets

global def all variant = allOut variant | findSomeFn getPathError | getOrPass "BUILT"

global def install dest =
  def libdir = simplify "{here}/share/wake/lib"
  def libfiles = sources libdir `.*`
  def binfiles = allOut default
  def releaseAs exe = cat (dest, "/", take 1 (extract `(.*)\.(.*)` exe))
  def libinstall = map (installIn dest) libfiles
  def bininstall = map (\exe installAs (releaseAs exe.getPathName) exe) binfiles
  libinstall ++ bininstall | findSomeFn getPathError | getOrPass "INSTALLED"
