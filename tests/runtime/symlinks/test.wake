export def datFile Unit =
    writeResult "datFile" "hello world"

export def goodLink Unit =
    require Pass dat =
        datFile Unit
    makeExecPlan ("ln", "-s", "datFile", "goodLink", Nil) (dat, Nil)
    | runJob
    | getJobResultOutput

export def badLink Unit =
    makeExecPlan ("ln", "-s", "badFile", "badLink", Nil) Nil
    | runJob
    | getJobResultOutput

export def shouldWork Unit =
    require Pass link =
        goodLink Unit
    require Pass dat =
        datFile Unit
    makeExecPlan ("cat", "goodLink", Nil) (link, dat, Nil)
    | editPlanEnvironment (setEnvironment "TEST" "1")
    | runJob
    | getJobResultInputs

export def shouldFail1 Unit =
    require Pass link =
        goodLink Unit
    makeExecPlan ("cat", "goodLink", Nil) (link, Nil)
    | editPlanEnvironment (setEnvironment "TEST" "2")
    | runJob
    | getJobResultInputs

export def shouldFail2 Unit =
    require Pass dat =
        datFile Unit
    makeExecPlan ("cat", "goodLink", Nil) (dat, Nil)
    | editPlanEnvironment (setEnvironment "TEST" "3")
    | runJob
    | getJobResultInputs

export def test _ =
    require Pass link = badLink Unit
    require True = getPathHash link !=* "BadHash"
    else failWithError "cannot hash a dangling symlink"
    require Pass what = shouldWork Unit
    require Fail _ = shouldFail1 Unit else failWithError "fail1 passed!"
    require Fail _ = shouldFail2 Unit else failWithError "fail2 passed!"
    require a, b, Nil = what
    else failWithError "did not detect both inputs ({format what})"
    require True = getPathHash a !=* getPathHash b
    else failWithError "identical hashes should not be identical"
    Pass 0
