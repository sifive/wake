# Copyright 2019 SiFive, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You should have received a copy of LICENSE.Apache2 along with
# this software. If not, you may obtain a copy at
#
#    https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

package build_wake
from wake import _
from gcc_wake import _

def version_h Unit =
    match (buildAs Unit)
        Fail f = makeBadPath f
        Pass ver = write "{here}/version.h" "#define VERSION {ver}\n"

def pkg name = match (pkgConfig name)
    Some x = x
    None   = makeSysLib "" | editSysLibLFlags ("-l{name}", _)

def ncurses Unit =
    pkgConfig "ncurses tinfo"
    | getOrElseFn (\Unit pkg "ncurses")
    | editSysLibCFlags (filter (matches `-I.*` _)) # remove feature test manipulation

def buildWake (Pair variant clib) =
    def internalDepResults =
        runtime variant, map (_ clib) (gopt, Nil)

    require Pass internalDeps =
        findFail internalDepResults

    def deps =
        flattenSysLibs internalDeps

    def headerFiles =
        version_h Unit,
        deps.getSysLibHeaders ++
        map source ("src/cli/describe.h", "src/cli/markup.h", Nil)

    def cppFiles =
        map source ("src/cli/describe.cpp", "src/cli/markup.cpp", "src/cli/main.cpp", Nil)

    def compile =
        compileC variant ("-I{here}", deps.getSysLibCFlags) headerFiles

    require Pass objFiles =
        map compile cppFiles
        | findFail

    def allObjs =
        objFiles.flatten ++
        deps.getSysLibObjects

    linkO variant deps.getSysLibLFlags allObjs "bin/wake"
