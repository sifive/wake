package v0_29_wake
from v0_30_wake export type Boolean Colour Double DoubleClass DoubleFormat Error Integer Intensity JSONFormat JSONNormalize JSONRunnerPlan JValue Job List LogLevel Map Option Order Pair Path Persistence Plan RegExp Result Runner RunnerInput RunnerOutput Status String Tree Triple Unit Usage Vector
from v0_30_wake export type binary ; =>
from v0_30_wake export def Aborted Black Blue Bright Cyan Dim DoubleDefault DoubleFixed DoubleHex DoubleInfinite DoubleNaN DoubleNormal DoubleScientific DoubleSubNormal EQ Error Exited Fail False GT Green JArray JBoolean JDouble JInteger JNull JObject JSONNormalize JString Keep LT Magenta Nil None Once Pair Pass ReRun Red RunnerInput RunnerOutput Share Signaled Some Triple True Unit Usage White Yellow _0 _1 _2 _3 _4 _5 _6 _7 _8 _9 abs access addEnvironmentPath addEnvironmentPathOpt addErrorContext and append at basename byteToInteger cat catWith claim claimFileAsPath claimFileAsPathIn cmp customFormatJSON cwd dabs dacos dasin datan dclass dcmp dcos defaultJSONFormat defaultRunner derf derfc dexp dexpm1 dfma dformat dfrexp dhex dint dirname distinctBy distinctRunBy dldexp dlgamma dlog dlog1p dmax dmin dmodf double dprod droot drop dropUntil dsin dsqrt dstr dsum dtan dtgamma editEnvironment editErrorCause editErrorStack editJSONFormatDouble editJSONFormatIndent editJSONFormatInteger editJSONFormatString editJSONRunnerPlanEstimate editJSONRunnerPlanExtraArgs editJSONRunnerPlanExtraEnv editJSONRunnerPlanRawScript editJSONRunnerPlanScore editPairFirst editPairSecond editPlanCommand editPlanDirectory editPlanEcho editPlanEnvironment editPlanFnInputs editPlanFnOutputs editPlanKeep editPlanLabel editPlanLocalOnly editPlanOnce editPlanPersistence editPlanResources editPlanRunnerFilter editPlanShare editPlanStderr editPlanStdin editPlanStdout editPlanUsage editPlanVisible editRunnerInputCommand editRunnerInputDirectory editRunnerInputEnvironment editRunnerInputLabel editRunnerInputPrefix editRunnerInputRecord editRunnerInputResources editRunnerInputStdin editRunnerInputVisible editRunnerName editRunnerOutputInputs editRunnerOutputOutputs editRunnerOutputUsage editRunnerScore editTripleFirst editTripleSecond editTripleThird editUsageCPUtime editUsageInBytes editUsageMemBytes editUsageOutBytes editUsageRuntime editUsageStatus empty enor environment eor exists explode extract failWithError files filter find findFail findFailFn findNone findNoneFn findPass findPassFn findSome findSomeFn flatten flip foldl foldr forall format formatJSON fuseRunner gcd getEnvironment getErrorCause getErrorStack getFail getJArray getJBoolean getJDouble getJInteger getJObject getJSONFormatDouble getJSONFormatIndent getJSONFormatInteger getJSONFormatString getJSONRunnerPlanEstimate getJSONRunnerPlanExtraArgs getJSONRunnerPlanExtraEnv getJSONRunnerPlanRawScript getJSONRunnerPlanScore getJString getJobDescription getJobFailedInputs getJobFailedOutputs getJobId getJobInputs getJobOutput getJobOutputs getJobRecord getJobReport getJobStatus getJobStderr getJobStdout getLogLevelName getOrElse getOrElseFn getOrFail getOrFailFn getOrPass getOrPassFn getPairFirst getPairSecond getPass getPathHash getPathName getPathParent getPlanCommand getPlanDirectory getPlanEcho getPlanEnvironment getPlanFnInputs getPlanFnOutputs getPlanHash getPlanKeep getPlanLabel getPlanLocalOnly getPlanOnce getPlanPersistence getPlanResources getPlanRunnerFilter getPlanShare getPlanStderr getPlanStdin getPlanStdout getPlanUsage getPlanVisible getRunnerInputCommand getRunnerInputDirectory getRunnerInputEnvironment getRunnerInputLabel getRunnerInputPrefix getRunnerInputRecord getRunnerInputResources getRunnerInputStdin getRunnerInputVisible getRunnerName getRunnerOutputInputs getRunnerOutputOutputs getRunnerOutputUsage getRunnerScore getTripleFirst getTripleSecond getTripleThird getUsageCPUtime getUsageInBytes getUsageMemBytes getUsageOutBytes getUsageRuntime getUsageStatus getUsageThreads getWhenFail getWhenPass getenv globToRegExp groupBy head icmp in inf installAs installIn int intbase integerToByte integerToUnicode isEQ isFail isGE isGT isJobOk isLE isLT isNE isNone isPass isPathDir isSome jempty jfilter jfind jlist job jsonEscape lastValueInList lcm len listToMap listToTree listToTreeMulti listToVector localRunner logDebug logEcho logError logInfo logNever logReport logWarning machine makeError makeExecPlan makeJSONRunner makeJSONRunnerPlan makeLogLevel makeLogLevel2 makePlan makeRunner makeShellPlan map mapFlat mapPartial mapToList matches max mdelete mempty mergeJSON mexists mfilter mfoldl mfoldmap mfoldr min minsert minsertReplace minsertWith mintersect mintersectWith mkdir mkdirIn mlookup mlowerGE mlowerGT mmap mmapPass mmax mmin mnew msize msplitBy msubtract munion munionWith mupperLE mupperLT nan normalizeJSON normalizeJSONCompat normalizeJSONIdentity normalizeJSONWith ofilter omap omapPartial or orElse overrideJSON parseJSONBody parseJSONFile path pi powm prepend prependPlanPath prettyJSON prettyJSONFormat print printLevel println printlnLevel prod quote rOK read regExpCat regExpToString relative replace reverse rfoldl rfoldr rmap rmapFail rmapPass root runIncrementalJob runJob runJobWith scanl scanr scmp scmpCanonical scmpIdentifier scmpLowercase seq setEnvironment setErrorCause setErrorStack setJSONFormatDouble setJSONFormatIndent setJSONFormatInteger setJSONFormatString setJSONRunnerPlanEstimate setJSONRunnerPlanExtraArgs setJSONRunnerPlanExtraEnv setJSONRunnerPlanRawScript setJSONRunnerPlanScore setJobTag setPairFirst setPairSecond setPlanCommand setPlanDirectory setPlanEcho setPlanEnvVar setPlanEnvironment setPlanFnInputs setPlanFnOutputs setPlanKeep setPlanLabel setPlanLocalOnly setPlanOnce setPlanPersistence setPlanResources setPlanRunnerFilter setPlanShare setPlanStderr setPlanStdin setPlanStdout setPlanUsage setPlanVisible setRunnerInputCommand setRunnerInputDirectory setRunnerInputEnvironment setRunnerInputLabel setRunnerInputPrefix setRunnerInputRecord setRunnerInputResources setRunnerInputStdin setRunnerInputVisible setRunnerName setRunnerOutputInputs setRunnerOutputOutputs setRunnerOutputUsage setRunnerScore setTripleFirst setTripleSecond setTripleThird setUsageCPUtime setUsageInBytes setUsageMemBytes setUsageOutBytes setUsageRuntime setUsageStatus shellJob simplify sortBy sortPaths sortStrings source sources splitAt splitBy splitUntil sqrt stack str strHex strOctal strbase stringToRegExp strlen sum sysname tab tail take takeUntil tap tappi tat tcontains tdelete tdistinctBy tdistinctRunBy tdrop tdropUntil tempty tequal texists tfilter tfind tfold tfoldl tfoldmap tfoldr tforall tinsert tinsertMulti tinsertReplace tinsertWith tintersect tintersectWith tlen tlowerGE tlowerGT tmax tmin tnew tokenize transpose treeToList treeToVector tsplit tsplitAt tsplitBy tsplitUntil tsubset tsubtract ttake ttakeUntil tunion tunionMulti tunionWith tupperLE tupperLT unicodeCanonical unicodeIdentifier unicodeLowercase unicodeToInteger unreachable unsetEnvironment unzip vat vcmp vdistinctBy vdistinctRunBy vdrop vdropUntil vectorToList vectorToMap vectorToTree vectorToTreeMulti vempty version vexists vfilter vfind vflatten vfoldl vfoldr vforall virtualRunner vlen vmap vmapPartial vmapPartial2 vmapReduce vmapScan vreverse vscan vscanl vscanr vseq vsortBy vsplitAt vsplitBy vsplitUntil vtab vtake vtakeUntil vtranspose vunfoldl vunzip vzip wOK wait wakePath which whichIn whichInEnvPath workspace write writeIn xOK xor zip
from v0_30_wake export def unary ! + +. , - -. ~ ∏ ∏. ∑ ∑. √ ∛ ∜
from v0_30_wake export def binary != !=* !=. !=^ !=~ $ % && * *. + ++ +. , - -. . / /. /../ // /| :-> ; < <* <. << <= <=* <=. <=> <=>* <=>. <=>^ <=>~ <=^ <=~ <^ <~ == ==* ==. ==/ ==^ ==~ > >* >. >= >=* >=. >=^ >=~ >> >^ >~ ^ ^. | || → ∈ ∉ ∋ ∌ ∘ ∩ ∪ ⊆ ⊇ ⊈ ⊉ ⊊ ⊋ ⊎
from v0_30_wake export topic environment path runner source
