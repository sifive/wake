# Copyright 2019 SiFive, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You should have received a copy of LICENSE.Apache2 along with
# this software. If not, you may obtain a copy at
#
#    https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# option
global data Option a =
  Some a
  None

global def isSome = match _
  Some _ = True
  None   = False

global def isNone = ! isSome _

global def getOrElse b = match _
  Some a = a
  None   = b

global def getOrElseFn fn = match _
  Some a = a
  None   = fn Unit

global def omap f = match _
  Some a = Some (f a)
  None   = None

global def omapPartial f = match _
  Some a = f a
  None   = None

global def ofilter f = match _
  Some a if f a = Some a
  _ = None

global def findSome = findSomeFn (_)
global def findSomeFn fn =
  def helper = match _
    Nil = None
    h, t = match (fn h)
      Some x = Some x
      None = helper t
  helper

global def findNone = findNoneFn (_)
global def findNoneFn fn =
  def helper = match _
    Nil = Some Nil
    h, t = match (fn h)
      None = None
      Some x = match (helper t)
       Some t = Some (x, t)
       n = n
  helper

# Promote Option to Result:

global def getOrFail f = getOrFailFn (\_ f)
global def getOrFailFn fn = match _
  Some a = Pass a
  None   = Fail (fn Unit)

global def getOrPass p = getOrPassFn (\_ p)
global def getOrPassFn fn = match _
  None   = Pass (fn Unit)
  Some f = Fail f
