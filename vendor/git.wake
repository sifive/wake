# Copyright 2019 SiFive, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You should have received a copy of LICENSE.Apache2 along with
# this software. If not, you may obtain a copy at
#
#    https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

package build_wake

from wake import _

topic releaseAs: String

def buildAs Unit = match (subscribe releaseAs)
    version, Nil = Pass version
    _ =
        def cmdline = which "git", "describe", "--tags", "--dirty", Nil

        require Pass stdout =
            makeExecPlan cmdline Nil
            | setPlanLabel "buildAs: git describe"
            | setPlanKeep False
            | setPlanStdout logNever
            | runJobWith localRunner
            | getJobStdout

        # The replace accomplish this:
        # v0.15.0-alpha-4-g6efe8e9-dirty ... for a tag v0.15.0-alpha with +4 commits
        #  0.15.0~alpha.4+g6efe8e9~dirty ... which sorts correctly for both rpm+deb
        # ^      ^     ^ ^        ^
        stdout
        | mk_node_semver_safe
        | replace `^v|\n.*` ''
        | replace `-([0-9]{1,3})-` '.\1+'
        | replace `-` '~'
        | Pass

topic releaseOn: String

def buildOn Unit = match (subscribe releaseOn)
    date, Nil = Pass date
    _ =
        def cmdline = which "git", "show", "-s", "--format=%ci", "HEAD", Nil

        require Pass stdout =
            makeExecPlan cmdline Nil
            | setPlanLabel "buildOn: git show"
            | setPlanKeep False
            | setPlanStdout logNever
            | runJobWith localRunner
            | getJobStdout

        Pass (replace `\n.*` '' stdout)

# Process the version when the version number and commit count are adjacent.
# v0.15.0-4-g6efe8e9
#       ^^^
# Without intervention this becomes
# v0.15.0.4-g6efe8e9
#       ^^^
# which breaks node's version requiement and is considered invalid
#
# Capture the parts and insert '-plus-' between the version and the commit. 
# Do nothing if the version is already safe.
def mk_node_semver_safe v =
    #                            | Matches the version tag, which should be 3 numbers separated by '.' with an optional leading 'v'
    #                            |                          | The number of commits since the tagged version, surrounded by '-'
    #                            |                          |        | The "rest", everything after the '-' after the commit number
    #                            |                          |        |
    #                            vvvvvvvvvvvvvvvvvvvvvvvvvv vvvvvvvv vvvv
    def unsafe_version_regex = `^(v?[0-9]+\.[0-9]+\.[0-9]+)-([0-9]+)-(.*)`

    require True = matches unsafe_version_regex v
    else v

    match (extract unsafe_version_regex v)
        version, commit, rest, Nil =
            (version, "-plus-", commit, "-", rest,)
            | cat
        _ = v
