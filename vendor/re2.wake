# Copyright 2019 SiFive, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You should have received a copy of LICENSE.Apache2 along with
# this software. If not, you may obtain a copy at
#
#    https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

package build_wake
from wake import _
from gcc_wake import _

def re2 = match _
  Pair "wasm-cpp14-release" _ = buildRE2WASM Unit
  _ =
    pkgConfig "re2"
    | getOrElseFn (\Unit pkg "re2")
    | editSysLibCFlags (filter (\x ! (matches `-std=.*` x))) # remove feature test manipulation
    | Pass

def buildRE2WASM Unit =
    def version =
        "2021-08-01"

    require Some emmake =
        emmake
    else
        failWithError "emmake is not available"

    def emsdk =
        replace `/[^/]*$` "" emmake

    require Pass patch =
        source "{here}/re2.patch"

    require Pass buildDir = vendorBuildDir Unit

    def job =
        """
            cd .build
            wget https://github.com/google/re2/archive/refs/tags/%{version}.tar.gz
            tar xvzf %{version}.tar.gz
            cd re2-%{version}
            patch -p0 < ../../%{relative here patch.getPathName}
            emmake make -j4 RE2_CXXFLAGS="-std=c++14 -I. -Wall -DNO_THREADS" CXXFLAGS="-O2" obj/libre2.a
        """
        | makePlan "compiling re2" (buildDir, patch, Nil)
        | editPlanEnvironment (addEnvironmentPath emsdk)
        | setPlanDirectory here
        | setPlanShare False
        | runJob

    require Pass outputs =
        job.getJobOutputs

    def headers =
        filter (matches `.*\.h` _.getPathName) outputs

    def objects =
        filter (matches `.*\.o` _.getPathName) outputs

    def cflags =
        "-I{here}/.build/re2-{version}",
        Nil

    def lflags =
        Nil

    Pass (SysLib "1.0" headers objects cflags lflags)
