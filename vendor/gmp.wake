# Copyright 2019 SiFive, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You should have received a copy of LICENSE.Apache2 along with
# this software. If not, you may obtain a copy at
#
#    https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

package build_wake
from wake import _
from gcc_wake import _

def gmp = match _
  Pair "wasm-cpp14-release" _ = buildGmpWASM Unit
  _ = Pass (pkg "gmp")

def buildGmpWASM _ =
  require Some emmake =
    emmake
  else
    failWithError "emmake is not available"

  def emsdk =
    replace `/[^/]*$` "" emmake

  def version = "6.2.1"

  require Pass buildDir = vendorBuildDir Unit

  def job =
    """
      cd .build
      wget https://ftp.gnu.org/gnu/gmp/gmp-%{version}.tar.xz
      tar xmf gmp-%{version}.tar.xz
      cd gmp-%{version}
      emconfigure ./configure --disable-assembly --host none --enable-cxx
      emmake make -j4 MAKEINFO=true
    """
    | makePlan "compiling gmp" (buildDir, Nil)
    | editPlanEnvironment (addEnvironmentPath emsdk)
    | setPlanDirectory here
    | runJob

  require Pass outputs = job.getJobOutputs

  def headers = filter (matches `.*\.h` _.getPathName) outputs

  def objects = filter (matches `.*\.a` _.getPathName) outputs

  def cflags = "-I{here}/.build/gmp-{version}", Nil

  def lflags = Nil

  Pass (SysLib version headers objects cflags lflags)
